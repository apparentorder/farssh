AWSTemplateFormatVersion: '2010-09-09'

Description: FarSSH deployment

Parameters:
  FarSshSuffix:
    Type: String
    Default: default
    AllowedPattern: ^default$
    ConstraintDescription: For now, only `default` is supported.

  VpcId:
    Type: AWS::EC2::VPC::Id

  PublicSubnets:
    Type: List<AWS::EC2::Subnet::Id>

  SshPort:
    Type: Number
    Default: 20022

  EnableAwslogsDriver:
    Description: |
      Enable `awslogs` driver for the Fargate Task. Disable this when
      connectivity to the Cloudwatch API is not possible, e.g. when running
      on a VPC without public IPv4 addresses / VPC endpoints.
    Type: String
    Default: true
    AllowedValues:
    - true
    - false

  ForcePublicIpv4:
    Description: |
      Force the FarSSH client to always request a public IPv4 address. This may
      be necessary when the client requests IPv6, but the FarSSH task needs
      IPv4 for pulling the docker image or for Cloudwatch Logs.
    Type: String
    Default: false
    AllowedValues:
    - true
    - false

  ImageUri:
    Description: |
      When FarSSH runs in an IPv6 subnet, change this to the DockerHub image, as
      AWS ECR Public does not support image pull over IPv6.
    Type: String
    Default: public.ecr.aws/apparentorder/farssh
    AllowedValues:
    - public.ecr.aws/apparentorder/farssh
    - docker.io/apparentorder/farssh

Conditions:
  AwslogsEnabled: !Equals [!Ref EnableAwslogsDriver, true]

Resources:
  FarSshExecutionRole:
    Type: AWS::IAM::Role
    Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: ecs-tasks.amazonaws.com
            Condition:
              StringEquals:
                "aws:SourceAccount": !Ref AWS::AccountId
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  FarSshTaskRole:
    Type: AWS::IAM::Role
    Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: ecs-tasks.amazonaws.com
            Condition:
              StringEquals:
                "aws:SourceAccount": !Ref AWS::AccountId
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonSSMManagedEC2InstanceDefaultPolicy # for debugging (ecs execute command)

  SsmParameterPublicSubnets:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /farssh/${FarSshSuffix}/public_subnets
      Value: !Join [",", !Ref PublicSubnets]

  SsmParameterSecurityGroup:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /farssh/${FarSshSuffix}/security_group
      Value: !Ref SecurityGroup

  SsmParameterSshPort:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /farssh/${FarSshSuffix}/ssh_port
      Value: !Ref SshPort

  SsmParameterForcePublicIpv4:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /farssh/${FarSshSuffix}/force_public_ipv4
      Value: !Ref ForcePublicIpv4

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub farssh-${FarSshSuffix}
      GroupDescription: !Sub farssh-${FarSshSuffix}
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref SshPort
          ToPort: !Ref SshPort
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: !Ref SshPort
          ToPort: !Ref SshPort
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIpv6: ::/0
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  CloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Condition: AwslogsEnabled
    Properties:
      LogGroupName: !Sub /ecs/farssh/${FarSshSuffix}
      RetentionInDays: 30

  EcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: farssh
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
        - CapacityProvider: FARGATE_SPOT

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub farssh-${FarSshSuffix}
      ExecutionRoleArn: !Ref FarSshExecutionRole
      TaskRoleArn: !Ref FarSshTaskRole
      Cpu: 256
      Memory: 512
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Name: farssh
          Essential: true
          Image: !Ref ImageUri
          PortMappings:
            - ContainerPort: !Ref SshPort
          LogConfiguration:
            !If
            - AwslogsEnabled
            - LogDriver: awslogs
              Options:
                awslogs-group: !Ref CloudWatchLogsGroup
                awslogs-region: !Ref AWS::Region
                awslogs-stream-prefix: ecs
            - !Ref AWS::NoValue
          Environment:
            - Name: FARSSH_SSH_PORT
              Value: !Ref SshPort
